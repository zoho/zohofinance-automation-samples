/*
This is a sample Custom Function written to be used in Custom Button of Zoho Books.

This Custom Button will help you to send bulk email from Zoho Books. 

Create a connection by the name "zbooks" for Zoho Books service.
*/

organizationID = organization.get("organization_id");
apiEndPoint = organization.get("api_root_endpoint");
resultMap = Map();
msg = "";
code = 1;
if(!Template_Name.isNull())
{
	emailList = List();
	arraySize = 100;
	notificationUrl = apiEndPoint + "/settings/emailtemplates?email_type=customer_notification&organization_id=" + organizationID;
	getNotification = invokeurl
	[
		url :notificationUrl
		type :GET
		connection:"zbooks"
	];
	emailtemplates = getNotification.get("emailtemplates");
	for each  template in emailtemplates
	{
		name = template.get("name");
		// 	info name;
		if(name.equalsIgnoreCase(Template_Name))
		{
			templateId = template.get("email_template_id");
			info templateId;
		}
	}
	if(!templateId.isNull())
	{
		code = 0;
		templateDetails = invokeurl
		[
			url :apiEndPoint + "/settings/emailtemplates/" + templateId + "?organization_id=" + organizationID
			type :GET
			connection:"zbooks"
		];
		templateDetails = templateDetails.get("email_template");
		mailSubject = templateDetails.get("subject");
		body = templateDetails.get("body");
		arraySize = arraySize - 1;
		pageList = "".rightpad(arraySize).replaceAll(" ",",").toList();
		i = 0;
		for each  page in pageList
		{
			i = i + 1;
			customers = invokeurl
			[
				url :apiEndPoint + "/vendors?page=" + page + "&per_page=200&organization_id=" + organizationID
				type :GET
				connection:"zbooks"
			];
			customers = customers.get("contacts");
			for each  findItems in customers
			{
				vendorID = findItems.get("contact_id");
				email = findItems.get("email");
				if(emailList.notcontains(vendorID) && !email.isNull())
				{
					emailList.add(email);
				}
			}
		}
		if(!emailList.isEmpty() && !templateId.isNull())
		{
			sendmail
			[
				from :zoho.adminuserid
				to : emailList
				subject :mailSubject
				message :body
			]
			msg = "Mail has been sent to the customers";
		}
	}
	else
	{
		msg = "Invalid template name";
	}
}
else
{
	msg = "Template Name is mandatory";
}
resultMap.put("message",msg);
resultMap.put("code",code);
return resultMap;

