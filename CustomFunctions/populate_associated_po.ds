/*	
  This Deluge Function will help you to populate the associated PO in SO module of Zoho Books. 
  
  Create a connection by the name "zbooks" for Zoho Books service.
*/

salesorderID = salesorder.get("salesorder_id");
apiEndPoint = organization.get("api_root_endpoint");
organizationID = organization.get("organization_id");
headerData = List();
headerData.add({"key":"purchaseorder_number","value":"Purchaseorder Number"});
headerData.add({"key":"vendor_name","value":"Vendor Name"});
headerData.add({"key":"status","value":"Status"});
headerData.add({"key":"amount","value":"Amount","align":"right"});
comments = invokeurl
[
	url :apiEndPoint + "/salesorders/" + salesorderID + "/comments?organization_id=" + organizationID
	type :GET
	connection:"zbooks"
];
comments = comments.get("comments");
details = Map();
listData = List();
for each  comment in comments
{
	type = comment.get("transaction_type");
	if(type.equalsIgnoreCase("purchaseorder"))
	{
		purchaseorderID = comment.get("transaction_id");
		info purchaseorderID;
		po = zoho.books.getRecordsByID("purchaseorders",organizationID,purchaseorderID).get("purchaseorder");
		poNumber = po.get("purchaseorder_number");
		info poNumber;
		vendorName = po.get("vendor_name");
		details.put("purchaseorder_number",{"value":poNumber,"link":"https://books.zoho.com/app#/purchaseorders/" + purchaseorderID});
		details.put("status",po.get("status").proper());
		details.put("vendor_name",vendorName);
		details.put("amount",po.get("total"));
		listData.add(details);
	}
}
resultMap = Map();
resultMap.put("header_context",headerData);
resultMap.put("data",listData);
return resultMap;
